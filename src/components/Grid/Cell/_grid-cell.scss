// ----------------------------------
// UI Components
// Grid Cell
// ----------------------------------
// Design System 1.0 Alpha
// 2019-11-11
// ----------------------------------

.grid__cell {
  @include grid-column(1, 7);

  // Ensures .grid__cell will not expand beyond it's designated
  // column boundaries
  max-width: 100%;

  // IE row placement fix
  @include mq($until: md) {
    @include grid-row-auto(3, true);
  }

  @include mq(sm) {
    @include grid-column(1, 13);
  }
}

// 1 column layout (used in listings)
.grid__cell--1-of-1 {
  @include grid-row-auto(3, true);

  @include mq(md) {
    @include grid-column(4, 10);
  }
}

// 2 column layout
.grid__cell--1-of-2 {
  @include mq(md) {
    @include grid-column(1, 9);
  }

  @include mq(lg) {
    @include grid-column(2, 9);
  }

  @include mq(xxl) {
    @include grid-column(3, 9);
  }
}

.grid__cell--2-of-2 {
  @include mq(md) {
    @include grid-column(9, 13);
  }

  @include mq(lg) {
    @include grid-column(9, 12);
  }
}

// 3 column layout
.grid__cell--1-of-3 {
  @include mq(md) {
    @include grid-column(1, 4);
  }
}

.grid__cell--2-of-3 {
  @include mq(md) {
    @include grid-column(4, 10);
  }
}

.grid__cell--3-of-3 {
  @include mq(md) {
    @include grid-column(10, 13);
  }
}

/**
 * Creates a suite of grid selectors to provide granular
 * control over the exact columns a grid cell should
 * span, e.g.
 *
 * .grid__cell--1-to-2 {
 *   grid-column-start: 1;
 *   grid-column-end: 2;
 * }
 *
 * .grid__cell--7-to-13 {
 *   grid-column-start: 6;
 *   grid-column-end: 13;
 * }
 */
$columns: (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);

@each $column-start in $columns {
  @each $column-end in $columns {
    @if $column-end > $column-start {
      .grid__cell--#{$column-start}-to-#{$column-end} {
        @include mq(md) {
          @include grid-column($column-start, $column-end);
        }
      }
    }
  }
}
